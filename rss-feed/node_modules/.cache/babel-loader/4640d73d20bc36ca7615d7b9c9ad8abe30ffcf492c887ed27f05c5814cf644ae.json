{"ast":null,"code":"var _jsxFileName = \"E:\\\\Tailieu\\\\Nam3\\\\FrondEnd\\\\AppDocBao\\\\news-reading-web\\\\rss-feed\\\\src\\\\components\\\\Navbar\\\\Navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport './Navbar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = ({\n  feedURLs,\n  setSelectedCategory\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [navbarActive, setNavbarActive] = useState(false);\n  const handleNavLinkClick = title => {\n    setSelectedCategory(title);\n    navigate(`/${title}`);\n  };\n  const handleScroll = () => {\n    if (window.scrollY > 100) {\n      setNavbarActive(true);\n    } else {\n      setNavbarActive(false);\n    }\n  };\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n  let newsList = /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: `navbar justify-content-center ${navbarActive ? 'active' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"d-flex m-0\",\n      children: feedURLs.map(feed => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-unstyled mx-2\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          to: `/${feed.title}`,\n          className: \"cate-name w-25\",\n          onClick: () => handleNavLinkClick(feed.title),\n          children: feed.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, feed.url, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fluid-container\",\n    children: newsList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"rMRB9Q6uIaGZIClQUsr0vIJqLTg=\", false, function () {\n  return [useNavigate];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useEffect","NavLink","useNavigate","jsxDEV","_jsxDEV","Navbar","feedURLs","setSelectedCategory","_s","navigate","navbarActive","setNavbarActive","handleNavLinkClick","title","handleScroll","window","scrollY","addEventListener","removeEventListener","newsList","className","children","map","feed","to","onClick","fileName","_jsxFileName","lineNumber","columnNumber","url","_c","$RefreshReg$"],"sources":["E:/Tailieu/Nam3/FrondEnd/AppDocBao/news-reading-web/rss-feed/src/components/Navbar/Navbar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\nimport './Navbar.css';\r\n\r\nconst Navbar = ({ feedURLs, setSelectedCategory }) => {\r\n  const navigate = useNavigate();\r\n  const [navbarActive, setNavbarActive] = useState(false);\r\n\r\n  const handleNavLinkClick = (title) => {\r\n    setSelectedCategory(title);\r\n    navigate(`/${title}`);\r\n  };\r\n\r\n  const handleScroll = () => {\r\n    if (window.scrollY > 100) {\r\n      setNavbarActive(true);\r\n    } else {\r\n      setNavbarActive(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, []);\r\n\r\n  let newsList = (\r\n    <nav className={`navbar justify-content-center ${navbarActive ? 'active' : ''}`}>\r\n      <ul className=\"d-flex m-0\">\r\n        {feedURLs.map(feed => (\r\n          <li className=\"list-unstyled mx-2\" key={feed.url}>\r\n            <NavLink\r\n              to={`/${feed.title}`}\r\n              className=\"cate-name w-25\"\r\n              onClick={() => handleNavLinkClick(feed.title)}\r\n            >\r\n              {feed.title}\r\n            </NavLink>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n\r\n  return (\r\n    <div className=\"fluid-container\">\r\n      {newsList}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,OAAO,EAAEC,WAAW,QAAQ,kBAAkB;AACvD,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,MAAM,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAoB,CAAC,KAAK;EAAAC,EAAA;EACpD,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMa,kBAAkB,GAAIC,KAAK,IAAK;IACpCN,mBAAmB,CAACM,KAAK,CAAC;IAC1BJ,QAAQ,CAAC,IAAII,KAAK,EAAE,CAAC;EACvB,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIC,MAAM,CAACC,OAAO,GAAG,GAAG,EAAE;MACxBL,eAAe,CAAC,IAAI,CAAC;IACvB,CAAC,MAAM;MACLA,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC;EAEDX,SAAS,CAAC,MAAM;IACde,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEH,YAAY,CAAC;IAC/C,OAAO,MAAMC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAEJ,YAAY,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIK,QAAQ,gBACVf,OAAA;IAAKgB,SAAS,EAAE,iCAAiCV,YAAY,GAAG,QAAQ,GAAG,EAAE,EAAG;IAAAW,QAAA,eAC9EjB,OAAA;MAAIgB,SAAS,EAAC,YAAY;MAAAC,QAAA,EACvBf,QAAQ,CAACgB,GAAG,CAACC,IAAI,iBAChBnB,OAAA;QAAIgB,SAAS,EAAC,oBAAoB;QAAAC,QAAA,eAChCjB,OAAA,CAACH,OAAO;UACNuB,EAAE,EAAE,IAAID,IAAI,CAACV,KAAK,EAAG;UACrBO,SAAS,EAAC,gBAAgB;UAC1BK,OAAO,EAAEA,CAAA,KAAMb,kBAAkB,CAACW,IAAI,CAACV,KAAK,CAAE;UAAAQ,QAAA,EAE7CE,IAAI,CAACV;QAAK;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC,GAP4BN,IAAI,CAACO,GAAG;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQ5C,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CACN;EAED,oBACEzB,OAAA;IAAKgB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,EAC7BF;EAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACrB,EAAA,CA7CIH,MAAM;EAAA,QACOH,WAAW;AAAA;AAAA6B,EAAA,GADxB1B,MAAM;AA+CZ,eAAeA,MAAM;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}