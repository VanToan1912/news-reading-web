{"ast":null,"code":"var _jsxFileName = \"E:\\\\Tailieu\\\\Nam3\\\\FrondEnd\\\\AppDocBao\\\\news-reading-web\\\\rss-feed\\\\src\\\\components\\\\ArticleDetailPage\\\\ArticleDetailPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios'; // Thư viện để đọc rss\nimport cheerio from 'cheerio'; // Thư viện xử lý rss\nimport styles from '../detail/Detail.module.css';\nimport { Link, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Detail = ({\n  articles\n}) => {\n  _s();\n  const {\n    link\n  } = useParams(); // Lấy tham số từ URL, trong trường hợp này là link\n  const [detail, setDetail] = useState(null); // State để lưu chi tiết bài viết\n  const [feedItems, setFeedItems] = useState([]); // State để lưu danh sách các bài viết liên quan\n\n  // Hàm chuyển đổi tiêu đề thành slug\n  function convertToSlug(text) {\n    let slug = text.toLowerCase();\n    slug = slug.normalize('NFD').replace(/[\\u0300-\\u036f]/g, ''); // Loại bỏ dấu tiếng Việt\n    slug = slug.replace(/\\s+/g, '-'); // Thay khoảng trắng bằng dấu gạch ngang\n    return slug;\n  }\n\n  // Hàm giải mã các ký tự đặc biệt trong chuỗi HTML\n  function decodeHTMLEntities(text) {\n    const entities = {\n      '&apos;': \"'\",\n      '&amp;': '&',\n      '&lt;': '<',\n      '&gt;': '>',\n      '&quot;': '\"'\n    };\n\n    // Thay thế các ký tự đặc biệt trong chuỗi với các thực thể tương ứng\n    Object.keys(entities).forEach(entity => {\n      const regex = new RegExp(entity, 'g');\n      text = text.replace(regex, entities[entity]);\n    });\n\n    // Sử dụng DOMParser để phân tích chuỗi HTML và trả về nội dung văn bản của nó\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(text, 'text/html');\n    return doc.documentElement.textContent || text;\n  }\n\n  // Hàm trích xuất đường dẫn từ URL\n  const extractLinkPath = url => {\n    const parts = url.split('/');\n    return parts[parts.length - 1];\n  };\n\n  // Sử dụng useEffect để gọi API và cập nhật state khi tham số link thay đổi\n  useEffect(() => {\n    async function fetch() {\n      try {\n        const response = await axios.get(`https://thethao247.vn/${link}`);\n        const html = response.data;\n        const $ = cheerio.load(html);\n\n        // Xử lý các lớp CSS trong HTML để sử dụng className thay vì class\n        $('[class]').each((index, element) => {\n          var _$$attr;\n          const classes = ((_$$attr = $(element).attr('class')) === null || _$$attr === void 0 ? void 0 : _$$attr.split(' ')) || [];\n          classes.forEach(className => {\n            $(element).removeClass(className).addClass(className);\n          });\n        });\n\n        // Trích xuất các thông tin cần thiết từ HTML\n        const title = decodeHTMLEntities($('.big_title').text().trim() || $('.title-detail').text().trim());\n        const content = $('#content_detail').html() || $('.txt_content').html() || $('.col740').html() || '';\n        const dateUp = $('.mr-auto').find('.post-time').text() || $('.time').text();\n        const demo = decodeHTMLEntities($('.sapo_detail').text());\n        const img = $('.expNoEdit').find('a').find('img').attr(\"data-src\");\n        const navElements = $('.breadcrumb a').toArray();\n        const navItems = navElements.map(li => $(li).text().trim());\n        const navItemsFiltered = navItems.slice(1); // Loại bỏ phần tử đầu tiên (thường là Trang chủ)\n\n        // Cập nhật state detail với các thông tin vừa trích xuất được\n        setDetail({\n          title,\n          demo,\n          content,\n          dateUp,\n          navItems: navItemsFiltered\n        });\n\n        // URL của RSS feed\n        const rssUrl = 'https://thethao247.vn/trang-chu.rss';\n\n        // Hàm để gọi API và cập nhật danh sách bài viết liên quan\n        const fetchRSS = async () => {\n          try {\n            const response = await axios.get(rssUrl);\n            const data = response.data;\n            const parser = new DOMParser();\n            const xml = parser.parseFromString(data, 'application/xml');\n\n            // Parse XML để lấy các mục trong RSS feed\n            const items = Array.from(xml.querySelectorAll('item')).map(item => {\n              var _item$querySelector, _item$querySelector2, _item$querySelector3;\n              const title = decodeHTMLEntities(((_item$querySelector = item.querySelector('title')) === null || _item$querySelector === void 0 ? void 0 : _item$querySelector.textContent) || '');\n              const link = ((_item$querySelector2 = item.querySelector('link')) === null || _item$querySelector2 === void 0 ? void 0 : _item$querySelector2.textContent) || '';\n              const description = ((_item$querySelector3 = item.querySelector('description')) === null || _item$querySelector3 === void 0 ? void 0 : _item$querySelector3.textContent) || '';\n\n              // Sử dụng cheerio để trích xuất URL hình ảnh từ mô tả HTML\n              const $ = cheerio.load(description);\n              const imageUrl = $('img').attr('src') || '';\n              return {\n                title,\n                link,\n                imageUrl\n              };\n            });\n\n            // Cập nhật state feedItems với danh sách các mục từ RSS feed\n            setFeedItems(items);\n          } catch (error) {\n            console.error('Error fetching data:', error);\n          }\n        };\n\n        // Gọi hàm fetchRSS để lấy danh sách bài viết liên quan\n        fetchRSS();\n      } catch (error) {\n        console.error('Error fetching the HTML:', error);\n      }\n    }\n\n    // Gọi hàm fetch khi tham số link thay đổi\n    fetch();\n  }, [link]); // useEffect sẽ chạy lại khi tham số link thay đổi\n\n  // useEffect để giải quyết các phần tử bí mật sau khi dữ liệu chi tiết được cập nhật\n  useEffect(() => {\n    if (detail !== null && detail !== void 0 && detail.content) {\n      const container = document.getElementById('maincontent');\n      if (container) {\n        const secretElements = container.querySelectorAll('[data-src]');\n        secretElements.forEach(element => {\n          element.setAttribute('src', element.getAttribute(\"data-src\") || ''); // Thêm thuộc tính src từ data-src\n        });\n        const reLink = container.querySelectorAll('.explus_related_1404022217_item a');\n        reLink.forEach(element => {\n          let originalUrl = element.getAttribute(\"href\") || '';\n          element.setAttribute('href', \"/detail\" + extractLinkPath(originalUrl)); // Cập nhật thuộc tính href của thẻ <a>\n        });\n      }\n    }\n  }, [detail]); // useEffect sẽ chạy lại khi state detail thay đổi\n\n  // Render các thành phần của trang chi tiết bài viết\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.subContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.breadCrumbDetail,\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: detail === null || detail === void 0 ? void 0 : detail.navItems.map((navItem, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: index > 0 ? `> ${navItem}` : /*#__PURE__*/_jsxDEV(\"a\", {\n              href: '/' + convertToSlug(navItem),\n              children: navItem\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 64\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: detail === null || detail === void 0 ? void 0 : detail.dateUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: styles.contentDetailTitle,\n          children: (detail === null || detail === void 0 ? void 0 : detail.title) || 'Loading...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: styles.contentDetailSapo,\n          children: detail === null || detail === void 0 ? void 0 : detail.demo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.maincontent,\n          id: \"maincontent\",\n          dangerouslySetInnerHTML: {\n            __html: (detail === null || detail === void 0 ? void 0 : detail.content) || ''\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.relateDetail,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles.horizontalHeading,\n        children: \"B\\xC0I LI\\xCAN QUAN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: feedItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.horizontalItem,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: '20px',\n              paddingRight: '10px',\n              paddingTop: '25px',\n              fontWeight: '700',\n              color: '#ababab'\n            },\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.horizontalImage,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.imageUrl || 'Loading...',\n              alt: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 69\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.horizontalTitle,\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: '/detail/' + extractLinkPath(item.link),\n                title: item.title,\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 73\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 69\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n};\n_s(Detail, \"rI8+Rn72FXpBUMDgLxs1fO5z+Mo=\", false, function () {\n  return [useParams];\n});\n_c = Detail;\nexport default Detail;\nvar _c;\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["React","useEffect","useState","axios","cheerio","styles","Link","useParams","jsxDEV","_jsxDEV","Detail","articles","_s","link","detail","setDetail","feedItems","setFeedItems","convertToSlug","text","slug","toLowerCase","normalize","replace","decodeHTMLEntities","entities","Object","keys","forEach","entity","regex","RegExp","parser","DOMParser","doc","parseFromString","documentElement","textContent","extractLinkPath","url","parts","split","length","fetch","response","get","html","data","$","load","each","index","element","_$$attr","classes","attr","className","removeClass","addClass","title","trim","content","dateUp","find","demo","img","navElements","toArray","navItems","map","li","navItemsFiltered","slice","rssUrl","fetchRSS","xml","items","Array","from","querySelectorAll","item","_item$querySelector","_item$querySelector2","_item$querySelector3","querySelector","description","imageUrl","error","console","container","document","getElementById","secretElements","setAttribute","getAttribute","reLink","originalUrl","children","subContainer","breadCrumbDetail","navItem","href","fileName","_jsxFileName","lineNumber","columnNumber","contentDetailTitle","contentDetailSapo","maincontent","id","dangerouslySetInnerHTML","__html","relateDetail","horizontalHeading","horizontalItem","style","fontSize","paddingRight","paddingTop","fontWeight","color","horizontalImage","src","alt","horizontalTitle","_c","$RefreshReg$"],"sources":["E:/Tailieu/Nam3/FrondEnd/AppDocBao/news-reading-web/rss-feed/src/components/ArticleDetailPage/ArticleDetailPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios'; // Thư viện để đọc rss\r\nimport cheerio from 'cheerio'; // Thư viện xử lý rss\r\nimport styles from '../detail/Detail.module.css';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nconst Detail = ({articles}) => {\r\n    const { link } = useParams(); // Lấy tham số từ URL, trong trường hợp này là link\r\n    const [detail, setDetail] = useState(null); // State để lưu chi tiết bài viết\r\n    const [feedItems, setFeedItems] = useState([]); // State để lưu danh sách các bài viết liên quan\r\n\r\n    // Hàm chuyển đổi tiêu đề thành slug\r\n    function convertToSlug(text) {\r\n        let slug = text.toLowerCase();\r\n        slug = slug.normalize('NFD').replace(/[\\u0300-\\u036f]/g, ''); // Loại bỏ dấu tiếng Việt\r\n        slug = slug.replace(/\\s+/g, '-'); // Thay khoảng trắng bằng dấu gạch ngang\r\n        return slug;\r\n    }\r\n\r\n    // Hàm giải mã các ký tự đặc biệt trong chuỗi HTML\r\n    function decodeHTMLEntities(text) {\r\n        const entities = {\r\n            '&apos;': \"'\",\r\n            '&amp;': '&',\r\n            '&lt;': '<',\r\n            '&gt;': '>',\r\n            '&quot;': '\"',\r\n        };\r\n\r\n        // Thay thế các ký tự đặc biệt trong chuỗi với các thực thể tương ứng\r\n        Object.keys(entities).forEach(entity => {\r\n            const regex = new RegExp(entity, 'g');\r\n            text = text.replace(regex, entities[entity]);\r\n        });\r\n\r\n        // Sử dụng DOMParser để phân tích chuỗi HTML và trả về nội dung văn bản của nó\r\n        const parser = new DOMParser();\r\n        const doc = parser.parseFromString(text, 'text/html');\r\n        return doc.documentElement.textContent || text;\r\n    }\r\n\r\n    // Hàm trích xuất đường dẫn từ URL\r\n    const extractLinkPath = (url) => {\r\n        const parts = url.split('/');\r\n        return parts[parts.length - 1];\r\n    };\r\n\r\n    // Sử dụng useEffect để gọi API và cập nhật state khi tham số link thay đổi\r\n    useEffect(() => {\r\n        async function fetch() {\r\n            try {\r\n                const response = await axios.get(`https://thethao247.vn/${link}`);\r\n                const html = response.data;\r\n                const $ = cheerio.load(html);\r\n\r\n                // Xử lý các lớp CSS trong HTML để sử dụng className thay vì class\r\n                $('[class]').each((index, element) => {\r\n                    const classes = $(element).attr('class')?.split(' ') || [];\r\n                    classes.forEach(className => {\r\n                        $(element).removeClass(className).addClass(className);\r\n                    });\r\n                });\r\n\r\n                // Trích xuất các thông tin cần thiết từ HTML\r\n                const title = decodeHTMLEntities($('.big_title').text().trim() || $('.title-detail').text().trim());\r\n                const content = $('#content_detail').html() || $('.txt_content').html() || $('.col740').html() || '';\r\n                const dateUp = $('.mr-auto').find('.post-time').text() || $('.time').text();\r\n                const demo = decodeHTMLEntities($('.sapo_detail').text());\r\n                const img = $('.expNoEdit').find('a').find('img').attr(\"data-src\");\r\n                const navElements = $('.breadcrumb a').toArray();\r\n                const navItems = navElements.map((li) => $(li).text().trim());\r\n                const navItemsFiltered = navItems.slice(1); // Loại bỏ phần tử đầu tiên (thường là Trang chủ)\r\n                \r\n                // Cập nhật state detail với các thông tin vừa trích xuất được\r\n                setDetail({ title, demo, content, dateUp, navItems: navItemsFiltered });\r\n\r\n                // URL của RSS feed\r\n                const rssUrl = 'https://thethao247.vn/trang-chu.rss';\r\n\r\n                // Hàm để gọi API và cập nhật danh sách bài viết liên quan\r\n                const fetchRSS = async () => {\r\n                    try {\r\n                        const response = await axios.get(rssUrl);\r\n                        const data = response.data;\r\n                        const parser = new DOMParser();\r\n                        const xml = parser.parseFromString(data, 'application/xml');\r\n\r\n                        // Parse XML để lấy các mục trong RSS feed\r\n                        const items = Array.from(xml.querySelectorAll('item')).map(item => {\r\n                            const title = decodeHTMLEntities(item.querySelector('title')?.textContent || '');\r\n                            const link = item.querySelector('link')?.textContent || '';\r\n                            const description = item.querySelector('description')?.textContent || '';\r\n\r\n                            // Sử dụng cheerio để trích xuất URL hình ảnh từ mô tả HTML\r\n                            const $ = cheerio.load(description);\r\n                            const imageUrl = $('img').attr('src') || '';\r\n                            return {\r\n                                title,\r\n                                link,\r\n                                imageUrl\r\n                            };\r\n                        });\r\n\r\n                        // Cập nhật state feedItems với danh sách các mục từ RSS feed\r\n                        setFeedItems(items);\r\n                    } catch (error) {\r\n                        console.error('Error fetching data:', error);\r\n                    }\r\n                };\r\n\r\n                // Gọi hàm fetchRSS để lấy danh sách bài viết liên quan\r\n                fetchRSS();\r\n            } catch (error) {\r\n                console.error('Error fetching the HTML:', error);\r\n            }\r\n        }\r\n\r\n        // Gọi hàm fetch khi tham số link thay đổi\r\n        fetch();\r\n    }, [link]); // useEffect sẽ chạy lại khi tham số link thay đổi\r\n\r\n    // useEffect để giải quyết các phần tử bí mật sau khi dữ liệu chi tiết được cập nhật\r\n    useEffect(() => {\r\n        if (detail?.content) {\r\n            const container = document.getElementById('maincontent');\r\n            if (container) {\r\n                const secretElements = container.querySelectorAll('[data-src]');\r\n                secretElements.forEach((element) => {\r\n                    element.setAttribute('src', element.getAttribute(\"data-src\") || ''); // Thêm thuộc tính src từ data-src\r\n                });\r\n\r\n                const reLink = container.querySelectorAll('.explus_related_1404022217_item a');\r\n                reLink.forEach((element) => {\r\n                    let originalUrl = element.getAttribute(\"href\") || '';\r\n                    element.setAttribute('href', \"/detail\" + extractLinkPath(originalUrl)); // Cập nhật thuộc tính href của thẻ <a>\r\n                });\r\n            }\r\n        }\r\n    }, [detail]); // useEffect sẽ chạy lại khi state detail thay đổi\r\n\r\n    // Render các thành phần của trang chi tiết bài viết\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.subContainer}>\r\n                <div className={styles.breadCrumbDetail}>\r\n                    <ul>\r\n                        {detail?.navItems.map((navItem, index) => (\r\n                            <li key={index}>\r\n                                {index > 0 ? `> ${navItem}` : (<a href={'/' + convertToSlug(navItem)}>{navItem}</a>)}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <div>{detail?.dateUp}</div>\r\n                </div>\r\n                <div>\r\n                    <h1 className={styles.contentDetailTitle}>{detail?.title || 'Loading...'}</h1>\r\n                    <h2 className={styles.contentDetailSapo}>{detail?.demo}</h2>\r\n                    <div className={styles.maincontent} id=\"maincontent\"\r\n                         dangerouslySetInnerHTML={{ __html: detail?.content || '' }}>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={styles.relateDetail}>\r\n                <h2 className={styles.horizontalHeading}>BÀI LIÊN QUAN</h2>\r\n                <div>\r\n                    {feedItems.map((item, index) => (\r\n                        <div className={styles.horizontalItem} key={index}>\r\n                            <span style={{ fontSize: '20px', paddingRight: '10px', paddingTop: '25px', fontWeight: '700', color: '#ababab' }}>{index + 1}</span>\r\n                            <div className={styles.horizontalImage}><img src={item.imageUrl || 'Loading...'}\r\n                                                                         alt={item.title} /></div>\r\n                            <div className={styles.horizontalTitle}><h3><a\r\n                                href={'/detail/' + extractLinkPath(item.link)}\r\n                                title={item.title}>{item.title}</a></h3>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Detail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}