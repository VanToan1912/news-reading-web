{"ast":null,"code":"// import React from 'react';\n// import parse, { domToReact } from 'html-react-parser';\n// import './Card.css';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import { Link } from 'react-router-dom';\n\n// // Trích xuất URL hình ảnh từ content\n// const extractImageUrl = (content) => {\n//   const imgTag = /<img.*?src=\"(.*?)\"/;\n//   const match = content.match(imgTag);\n//   return match ? match[1] : '';\n// };\n\n// // hàm để cất nội dung để hiển thị tối đa maxLength ký tự\n// const truncate = (content, maxLength) => {\n//   if (content.length > maxLength) {\n//     return content.substring(0, maxLength) + \"...\";\n//   } else {\n//     return content;\n//   }\n// };\n\n// const Card = ({ content, contentSnippet, title, link, date }) => {\n//   let formatted = { day: \"numeric\", month: \"long\", year: \"numeric\" };\n//   let articleDate = new Date(date).toLocaleDateString(\"en-GB\", formatted);\n\n//   const options = {\n//     replace: ({ name, attribs, children }) => {\n//       if (!attribs) return;\n//       if (name === 'a') {\n//         return (\n//           <a href={attribs.href} target=\"_blank\" rel=\"noopener noreferrer\">\n//             {domToReact(children, options)}\n//           </a>\n//         );\n//       }\n//       if (name === 'img') {\n//         return <img src={attribs.src} alt={attribs.alt || 'image'} />;\n//       }\n//     },\n//   };\n\n//   const imageUrl = extractImageUrl(content);\n\n//   return (\n//     <div className=\"article-card row\">\n//       <div className=\"col thumnails\">\n//         <Link to={`/article?url=${encodeURIComponent(link)}`} className=\"title-article\">\n//           {imageUrl && <img src={imageUrl} alt=\"article\" className=\"img-fluid img-resize\" />}\n//         </Link>\n\n//       </div>\n\n//       <div className=\"col box-text\">\n//         <h3 className=\"box-title-text\">\n//           <a href={link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"title-article\">{truncate(title, 20)}</a>\n//         </h3>\n//         <div className=\"content-s\">\n//           <div className=\"content-snippet\">\n//             <p >\n//               {parse(truncate(contentSnippet, 150), options)}\n//             </p>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Card;","map":{"version":3,"names":[],"sources":["D:/Lập trình FrontEnd/news-reading-web/rss-feed/src/components/Card/Card.js"],"sourcesContent":["// import React from 'react';\r\n// import parse, { domToReact } from 'html-react-parser';\r\n// import './Card.css';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\n// // Trích xuất URL hình ảnh từ content\r\n// const extractImageUrl = (content) => {\r\n//   const imgTag = /<img.*?src=\"(.*?)\"/;\r\n//   const match = content.match(imgTag);\r\n//   return match ? match[1] : '';\r\n// };\r\n\r\n// // hàm để cất nội dung để hiển thị tối đa maxLength ký tự\r\n// const truncate = (content, maxLength) => {\r\n//   if (content.length > maxLength) {\r\n//     return content.substring(0, maxLength) + \"...\";\r\n//   } else {\r\n//     return content;\r\n//   }\r\n// };\r\n\r\n// const Card = ({ content, contentSnippet, title, link, date }) => {\r\n//   let formatted = { day: \"numeric\", month: \"long\", year: \"numeric\" };\r\n//   let articleDate = new Date(date).toLocaleDateString(\"en-GB\", formatted);\r\n\r\n//   const options = {\r\n//     replace: ({ name, attribs, children }) => {\r\n//       if (!attribs) return;\r\n//       if (name === 'a') {\r\n//         return (\r\n//           <a href={attribs.href} target=\"_blank\" rel=\"noopener noreferrer\">\r\n//             {domToReact(children, options)}\r\n//           </a>\r\n//         );\r\n//       }\r\n//       if (name === 'img') {\r\n//         return <img src={attribs.src} alt={attribs.alt || 'image'} />;\r\n//       }\r\n//     },\r\n//   };\r\n\r\n//   const imageUrl = extractImageUrl(content);\r\n\r\n\r\n\r\n//   return (\r\n//     <div className=\"article-card row\">\r\n//       <div className=\"col thumnails\">\r\n//         <Link to={`/article?url=${encodeURIComponent(link)}`} className=\"title-article\">\r\n//           {imageUrl && <img src={imageUrl} alt=\"article\" className=\"img-fluid img-resize\" />}\r\n//         </Link>\r\n\r\n//       </div>\r\n\r\n//       <div className=\"col box-text\">\r\n//         <h3 className=\"box-title-text\">\r\n//           <a href={link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"title-article\">{truncate(title, 20)}</a>\r\n//         </h3>\r\n//         <div className=\"content-s\">\r\n//           <div className=\"content-snippet\">\r\n//             <p >\r\n//               {parse(truncate(contentSnippet, 150), options)}\r\n//             </p>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Card;\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}